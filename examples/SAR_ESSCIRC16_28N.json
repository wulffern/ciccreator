//====================================================================
//        Copyright (c) 2014 Carsten Wulff Software, Norway 
// ===================================================================
// Created       : wulff at 2014-05-09
// Author        : Carsten Wulff
// Contact       : carsten (at) wulff.no
// ===================================================================
//   This program is free software: you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation, either version 3 of the License, or
//   (at your option) any later version.
// 
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
// 
//   You should have received a copy of the GNU General Public License
//   along with this program.  If not, see <http://www.gnu.org/licenses/>.
//====================================================================
{
	//Add regex in here to disable certain cells
    "disableCells" : [
    ],


	//All cells in the SAR
    "cells":
    [
		//------------------------------------------------------------
		// Unit cells
		//------------------------------------------------------------
        { "name": "RM1" , "class" : "cIcCore::PatternResistor",
          "getRuleForHorizontalGrid" : ["M1","width"],
          "getRuleForVerticalGrid" : ["M1","width"],
          "afterNew" :{
              "fillCoordinatesFromStrings" :[[  "M1","ArB"]]
          }
        },
        { "name": "RM4" , "class" : "cIcCore::PatternResistor",
          "getRuleForHorizontalGrid" : ["M4","width"],
          "getRuleForVerticalGrid" : ["M4","width"],
          "afterNew" :{
              "fillCoordinatesFromStrings" :[[  "M4","ArB"]]
          }
        },
        { "name" : "CAP",
          "class" : "Gds::GdsPatternCapacitor",
          "yoffset": -0.5,
          "xoffset": -0.5,
          "widthoffset" : -1,
          "fillCoordinatesFromStrings" : [

              [   "M1",
                  "-wwwwwwwwkwwwwww------",
                  "----------------------",
                  "-wwwwwwwwkwwwwww------",
                  "----------------------",
                  "----------------------"

              ],
              [   "M2",
                  "-xxxxxxxxxkxxxxxxxxx--",
                  "----------------------",
                  "-xxxxxxxxxkxxxxxxxxx--",
                  "----------------------",
                  "----------------------"
              ],
              [   "M3",
                  "--xxxxxxxxxxxxxx-xxkx-",
                  "----x---------------B-",
                  "kxxrx-xxxxxxxxxxxxxrx-",
                  "----------------------",
                  "----------------------"
              ],
              [   "M4",
                  "wwwwwwwwwwwwwwwwwwwww-",
                  "----------------------",
                  "wAwwwwwwwwwwwwwwwwwww-",
                  "----------------------",
                  "----------------------"

              ]

          ]
        },
        {"name" : "CAPR" , "inherit" : "CAP", "afterPaint" : { "mirrorCenterY" : 0 }},
		{ "name" : "DMOSE" ,
          "class" : "Gds::GdsPatternTransistor",
		  "afterNew" : {
			  "minPolyLength" : 36
		  },
          "yoffset": -1.5,
          "heightoffset": -2,
          "widthoffset" : -1,
          "fillCoordinatesFromStrings" : [
              [   "OD",
                  "-------------------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx",
				  "-----xxxx----------xxxx",
                  "-----xCxC----------xCxC",
                  "-----xxxx----------xxxx",
                  "-----xxxx----------xxxx",
                  "-----xxxx----------xxxx",
                  "-----xCxC----------xCxC",
				  "-----xxxx----------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx"
              ],
              [   "PO",
                  "-----------------------",
                  "--mmmmmmmmmmmmm--------",
                  "-----------------------",
				  "-----------------------",
                  "-----------------------",
                  "-----------------------",
                  "-----------------------",
                  "--mmmmmGmmmmcmc--------",
                  "-----------------------",
				  "-----------------------",
                  "-----------------------",
                  "-----------------------",
                  "-----------------------",
                  "--mmmmmmmmmmmmm--------",
                  "-----------------------"
              ],
              [   "M1",
                  "-------------------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx",
				  "-------------------xxxx",
                  "-----wDww----------xxxx",
                  "-------------------xxxx",
                  "------------wGww---xBxx",
                  "-------------------xxxx",
                  "-----wSww----------xxxx",
                  "-------------------xxxx",
				  "-------------------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx",
                  "-------------------xxxx"
              ]
          ]
        },

        { "name" : "PCHDL",
          "inherit" : "DMOSE",
          "type" : "pch_lvt_io",
          "beforePlace" :{
              "addEnclosures" : [
                  ["OD",1,["PPE","LVT","HS"]],
                  ["OD",0,["PP","NSS"]]
              ],
              "addEnclosuresByRectangle" : [
                  ["OD",[0,0,"width","height"],["OD2"]],
                  ["OD",[0,0,11,"height"],["HS"]]
              ]
          }
        },

        { "name" : "NCHDL",
          "inherit" : "DMOSE",
          "xoffset" : -2,
          "afterNew" : {
              "mirrorPatternString" : 1
          },
          "type" : "nch_lvt_io",
          "beforePlace" :{
              "addEnclosures" : [
                  ["OD",1,["LVT"]]
              ],
              "addEnclosuresByRectangle" : [
                  ["OD",[0,0,"width","height"],["NW","HS","OD2"]],
                  ["OD",[0,0,4,"height"],["NSSN"]]
              ]
          }
        },

		 { "name" : "NCHDLR", "type" : "nch_lvt_io",
          "inherit" : "NCHDL", "afterPaint" : { "mirrorCenterY" : 0 },
          "beforePlace" :{
              "addEnclosuresByRectangle" : [
                  ["OD",[0,0,22,15],["NW","HS"]]
              ]
          }
        },

		//------------------------------------------------------------
		// Digital cells
		//------------------------------------------------------------

		//- Tie High
        { "name": "TIEH_EV",
          "symbol" : "tieh",
          "class" : "Layout::LayoutDigitalCell",
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","A","MN0:G-|--MN0:D"],
                                      ["PO","A","MN0:G-MP0:G"] ]
          },
          "afterRoute"  : {
              "addPortOnRects" : [  ["Y","M1", "MP0:D"] ]
          }
        },

		//- Tie Low
        { "name": "TIEL_EV",
          "symbol" : "tiel",
          "class" : "Layout::LayoutDigitalCell",
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","A","MP:D-|--MP:G"],
                                      ["PO","A","MN:G-MP:G"] ]
          }
          ,
          "afterRoute"  : {
              "addPortOnRects" : [  ["Y","M1", "MN0:D"] ]
          }
        },

		//- Unit capacitor
        { "name": "CAPX1_EV" ,
          "class" : "Layout::LayoutDigitalCell",
          "afterRoute"  : {
              "addPortOnRects" : [  ["A","M4", "XA1:A"] , ["B", "M3", "XB1:B"]]
          }
        },

		//- Inverter 1x strength
        { "name": "IVX1_EV" ,
          "symbol" : "inv",
          "class" : "Layout::LayoutDigitalCell",
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","Y","MN:D-|--MP:D"],
                                      ["PO","A","MN:G-MP:G"] ]
          },
          "afterRoute"  : {
              "addPortOnRects" : [  ["A","M1", "MN0:G"] , ["Y", "M1", "MN0:D"]]
          }
        },

		//- Inverter 2x strength
        { "name": "IVX2_EV" ,
          "class" : "Layout::LayoutDigitalCell",
          "symbol" : "inv",
          "setYoffsetHalf" :  "" ,
          "rows" : 2,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","Y","MN0:D-|--MP0:D"],
                                      ["PO","A","MN:G-MP:G"] ,
                                      ["M1","A","MN0:G||MN1:G"] ,
                                      ["M1","A","MP0:G||MP1:G"]
                                    ]
          },
          "afterRoute"  : {
              "addPortOnRects" : [  ["A","M1", "MN0:G"] , ["Y", "M1", "MN0:D"]]
          }
        },

		//Inverter 4x strength
		{ "name": "IVX4_EV" ,
          "class" : "Layout::LayoutDigitalCell",
          "symbol" : "inv",
          "setYoffsetHalf" :  "" ,
          "rows" : 4,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","Y","MN0:D,MN2:D-|--MP0:D,MP2:D"],
                                      ["PO","A","MN:G-MP:G"] ,
                                      ["M1","A","MN0:G||MN3:G"] ,
                                      ["M1","A","MP0:G||MP3:G"]
                                    ]
          },
          "afterRoute"  : {
              "addPortOnRects" : [  ["A","M1", "MN0:G"] , ["Y", "M1", "MN0:D"]]
          }
        },

		//- Switch 2x strength
        { "name": "SWX2_EV" ,
          "class" : "Layout::LayoutDigitalCell",
          "symbol" : "",
          "inherit" : "IVX2_EV",
          "beforeRoute" : [
              {"addVias" :  [
                  ["M3","M4","MP1:D",2,1,8,"CUST_VREF"]
              ]},
              {"addDirectedRoutes" : [
                  ["M3","VREF","MP0:S,MP1:D-|--CUST_VREF"]
              ]}
          ],
          "afterRoute"  : {
              "addPortOnRects" : [  ["VREF","M4","CUST_VREF"]]
          }
        },

		//- Switch 4x strength
        { "name": "SWX4_EV" ,
          "class" : "Layout::LayoutDigitalCell",
          "symbol" : "",
          "setYoffsetHalf" :  "" ,
          "rows" : 4,
          "beforeRoute" : [
              {"addVias" :  [
                  ["M3","M4","MP1:D",2,1,8,"CUST_VREF"]
              ]},
			  {"addDirectedRoutes" : [ ["M1","Y","MN0:D,MN2:D-|--MP0:D,MP2:D"],
                                       ["PO","A","MN:G-MP:G"] ,
                                       ["M1","A","MN0:G||MN3:G"] ,
                                       ["M1","A","MP0:G||MP3:G"],
                                       ["M3","VREF","MP0:S,MP1:D,MP3:D-|--CUST_VREF"]
									 ]}
          ],
          "afterRoute"  : {

              "addPortOnRects" : [  ["A","M1", "MN0:G"] , ["Y", "M1", "MN0:D"],["VREF","M4","CUST_VREF"]]
          }
        },

		//- Transmission gate with power down
        { "name": "TGPD_EV" ,
          "class" : "Layout::LayoutDigitalCell",
          "setYoffsetHalf" : "",
          "rows": 3,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","C","MN0:S-|--MP0:S"],
                                      ["PO","C","MN0:G-MP0:G"],
                                      ["M1","A","MN2:D-|--MP2:D"],
                                      ["M1","B","MN2:S-|--MP2:S"],
                                      ["M1","C","MN0:G||MN1:G"],
                                      ["M1","CN","MN2:G-|--MN0:S"],
                                      ["M1","C","MP0:G-|MP2:G"],
                                      ["M4","NC","MP1:S-|--MP1:G"]
                                    ]			  
          },
          "afterRoute"  : {
              "addPortOnRects" : [  ["C","M1", "MP0:G"],["B","M1","MP2:S"],["A","M1","MN2:D"]
                                 ]
          }
        },

		//- Tapcells, used for bulk connections
        { "name": "TAPCELL_EV",
          "class" : "Layout::LayoutDigitalCell",
          "beforeRoute" : {
              "addVias" : [ ["M1", "M4", "MN:D",2]],
              "addVerticalRects" : [ ["M4","M:D",2]],
              "addDirectedRoutes" : [ ["M1","TAP","MN1:B->MN1:G"],
                                      ["M1","TAP","MN1:G-|--MN1:S"],
                                      ["M1","TAP","MN1:G-|--MN1:D"],
                                      ["M1","TAP","MP:S-|--MP:G"],
                                      ["M1","TAP","MP:D-|--MP:G"],
                                      ["M1","TAP","MP:G->MP:B"],
                                      ["M1","TAP","MN:D-MP:D"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["TAP", "M1","MN:D" ] ]
          }
        },
        { "name": "TAPCELLB_EV",
          "class" : "Layout::LayoutDigitalCell",
          "boundaryIgnoreRouting" : 1,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","TAP","MN1:B->MN1:G"],
                                      ["M1","TAP","MN1:G-|--MN1:S"],
                                      ["M1","TAP","MN1:G-|--MN1:D"],
                                      ["M1","TAP","MP:S-|--MP:G"],
                                      ["M1","TAP","MP:D-|--MP:G"],
                                      ["M1","TAP","MP:G-|--MP:B"]
                                    ]

          }
        },

		//- NOR 1x strength
        { "name": "NRX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "rows" : 2,
          "symbol" : "nor",
          "setYoffsetHalf" :  "" ,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","Y","MN0:D-|--MP1:D"],
                                      ["PO","A","MN0:G-MP0:G"],
                                      ["PO","B","MN1:G-MP1:G"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["A", "M1" ,"MN0:G"], ["B", "M1", "MN1:G"], ["Y", "M1", "MN1:S" ]]
          }
        },

		//- NAND 1x strength
        { "name": "NDX1_EV" ,
          "class" : "Layout::LayoutDigitalCell",
          "rows" : 2,
          "symbol" : "nand",
          "setYoffsetHalf" :  "" ,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","Y","MN1:D-|--MP1:S"],
                                      ["PO","A","MN0:G-MP0:G"],
                                      ["PO","B","MN1:G-MP1:G"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["A", "M1" ,"MN0:G"], ["B", "M1", "MN1:G"], ["Y", "M1", "MN1:D" ]]
          }
        },

		//--------------------------------------------------------------------------------------
		// SAR cells
		//--------------------------------------------------------------------------------------
		
		//- Enable propagation. ENO is 0 on RST. ENO = EN & (A | B)
        { "name": "SAREMX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "rows" : 4,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["PO","A","MN1:G-MP1:G"],
                                      ["PO","B","MN2:G-MP2:G"],
                                      ["PO","AM","MN3:G-MP3:G"],
                                      ["M1","N1","MP2:D||MP3:S"],
                                      ["M1","N2","MP1:D||MP2:S"],
                                      ["M1","N3","MN1:D||MN2:S"],
                                      ["M1","N3","MN0:D-|MN1:D"],
                                      ["M1","AM","MN0:S->MP0:S"],
                                      ["M1","ENO","MP1:S--|-MN3:D"],
                                      ["M1","AM","MP0:S-|--MP3:G"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["A", "M1"], ["B", "M1"], ["RST_N", "M1"] , ["EN", "M1"], ["ENO", "M1", "MP1:S"]  ]
          }
        },

		//- Conditional pull down, DOWN = A & EN & LCK_N, UP = RST_N
        { "name": "SARLTX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "rows" : 3,
          "setYoffsetHalf" :  "" ,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","CHL","MN2:D-|--MP2:D"],
                                      ["M1","RST_N","MP0:G||MP2:G"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["A", "M1"], ["RST_N", "M1","MP2:G"] , ["EN", "M1"], ["LCK_N", "M1"], ["CHL", "M1"], ["AVDD","M4"], ["AVSS","M4"]  ]
          }
        },

		//- Conditional pull up, UP = A | B, DOWN = RST
        { "name": "SARCEX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "rows" : 4,
          "setYoffsetHalf" :  "" ,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","CHL","MN3:D-|--MP0:S,MP3:D"],
                                      ["M1","RST","MN0:G||MN3:G"],
                                      ["M1","A","MP1:G||MP0:G"],
                                      ["M1","B","MP2:G||MP3:G"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["A", "M1","MP0:G"],["B", "M1","MP2:G"], ["RST", "M1","MN1:G"] , ["A", "M1"], ["Y", "M1"], ["AVDD","M4"], ["AVSS","M4"]  ]
          }
        },

		//- Half a strong-arm comparator
        { "name": "SARCMPHX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "setYoffsetHalf" :  "" ,
          "rows" : 7,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["PO","VMR","MN6:G-MP6:G"],
                                      ["M1","VMR","MP4:G||MP6:G"],
                                      ["M1","CI","MN1:G||MN5:G"],
                                      ["M1","N2","MN1:D,MN3:D,MN5:D-|--MP1:D"],
                                      ["M1","N1","MN0:D,MN2:D|-MN4:D"],
                                      ["M1","N1","MN0:D-|--MP0:S"],
                                      ["M1","CO","MP3:D,MP5:D--|-MN6:D"],
                                      ["PO","CK","MN0:G-MP0:G"],
                                      ["M1","CK","MP0:G,MP1:G-|MP3:G"],
                                      ["M4","NC","MP2$:D-|--MP2:G"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["AVDD","M4" ],["N1","M1","MN4:D"],["N2","M1","MN5:D" ]]
          }
        },

		//- Comparator kick back compensator
        { "name": "SARKICKHX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "setYoffsetHalf" :  "" ,
          "rows" : 7,
          "beforeRoute" : {
              "addDirectedRoutes" : [   ["M1","N1","MN0:D||MN6:S"],
                                        ["M1","N1","MN0:D-|--MP0:S"],
                                        ["M1","CI","MN1:G||MN5:G"],
                                        ["PO","CKN","MN0:G-MP0:G"],
                                        ["M1","NC","MP1:G||MP6:G"],
                                        ["M1","NC","MP1:S||MP6:D"],
                                        ["M1","NC","MN6:D-MP6:D"],
                                        ["M1","NC","MP6:D-|--MP6:G"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["AVDD","M4"], ["CK","M1", "MN6:G" ],["CKN","M1","MN0:G"],["CI","M1","MN1:G"]]
          }
        },

		//- Bootstrapped switch control
        { "name": "SARBSSWCTRL_EV" ,
          "class" : "Layout::LayoutDigitalCell",
          "setYoffsetHalf" : "",
          "rows": 2,
          "beforeRoute" : {
              "addDirectedRoutes" : [
                  ["PO","C","MN0:G-MP0:G"],
                  ["M1","GN","MN1:D-|--MP0:S"],
                  ["M1","GN","MP0:S-|--MP1:G"]
              ]
          },
          "afterRoute"  : {
              "addPortOnRects" : [  ["GNG","M1", "MP0:D"] , ["TIE_H", "M1", "MN1:G"],["C","M1","MP0:G"],["GN","M1","MN1:D"]]
          }

        },

		//- Boostrapped switch
		{ "name" : "SARBSSW_EV", "class" : "Layout::LayoutDigitalCell",
          "composite" : 1,
          "beforeRoute" : [
              {"addVias" : [ ["M1","M3","XA4:GNG",2],
                            ["M3","M4","XA4:GNG",2,1,6,"CUST_GNG"]
                           ]},
              {"addRouteHorizontalRects" : [["M3","XA4:GNG",6]]},

              {"addDirectedRoutes" : [
                  ["M1", "VI", "M1:D|-M:D"],
                  ["M1", "GN", "M1:G||M4:G"],
                  ["M2", "CKN","XA0:MP0:D-|--XA3:C,XA4:C"],
                  ["M1", "TIE_L", "M5:G||M8:G"],
                  ["M2", "TIE_H", "XA4:TIE_H-|--XA1:Y"],
                  ["M2", "TIE_L", "M8:G-|--XA2:Y"],
                  ["M2", "VI","M3:D-|--XA3:A"],
                  ["M3", "GN","M4:G-|--XA4:GN"],
                  ["M4", "GNG","XCAPB1:XA1:A--|-CUST_GNG"],
                  ["M3", "VS","XA3:B-|--XCAPB0:XA1:B"],
                  ["M4", "GNG","XCAPC0:A-|XCAPC:A","track20"],
                  ["M3", "VS","XCAPC0:B-|XCAPC:B"],
                  ["M1", "VO1", "M1:S-|M[234]:S"],
                  ["M1", "VO2", "M5:S-|M[678]:S"]
              ]}
          ],
          "afterRoute" : [
              {"addPortVias" : [
                  ["M1","M4","VI","M1:D",1,2,-1,-0.5],
                  ["M2","M4","TIE_L","XA2:Y",1,2,-4,-0.5]
              ]},
              {"addPortOnRects" : [ ["CK","M1"],["CKN","M1","XA3:C" ], ["TIE_L","M2"],["VO1","M1","M4:S"],["VO2","M1","M8:S"]]}
         ]
        },
		
		//- CDAC unit capacitor cell
        { "name": "CAP32C_EV" , "class" : "Layout::LayoutCapCellSmall","maxcap" : 32,"usem3" : 1},

		//- CDAC
        { "name": "CDAC9_EV", "class" : "Layout::LayoutCDACSmall"},
		
		//- Strong-arm comparator
        { "name": "SARCMPX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "composite" : 1,
          "beforeRoute" : {
              "addDirectedRoutes" : [
                  ["M1","CNO_I","XA2b?$:MP6:S-|--XA3b?$:MP4:G,XA3a:MP0:G"],
                  ["M2","CPO_I","XA3b?$:MP4:S-|--XA2b?$:MP5:G,XA2a:MP0:G"],
			      ["M2","CNI", "XA1$:MN5:G-|XA2$:MN1:G"],
                  ["M2","CPI", "XA3$:MN5:G-|XA4$:MN1:G"],
                  ["M1","CK_B","XA1$:MN6:G|-XA2b?$:MN0:G,XA3b?$:MN0:G,XA4$:MN6:G"],
                  ["M1","CK_B","XA4$:MN6:G-|--XA9:Y"],
                  ["M2","CK_N","XA1b?$:MN0:G|-XA4$:MN0:G,XA9:MN0:G"],
                  ["M2","CK_N","XA9:MN0:G-|--XA10:MN1:D"],
                  ["M1","DONE_N","XA11:Y--|-XA10:MN0:G"],
                  ["M1","CK_A","XA12:MP0:D-|--XA10:MP1:G"],
                  ["M1","N1","XA2b?$:MN4:D|-XA3b?$:MN4:D"]
              ],
			  "addConnectivityRoutes" : [
			  ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["CK_SAMPLE","M1"] ,["CK_CMP","M1"],["DONE","M1"],["CNO", "M1","XA3a:Y"], ["CPO","M1","XA2a:Y"] ,["CPI","M1","XA1$:MN5:G" ],["CNI","M1","XA3$:MN5:G" ] ]
          }
        },


		//- Logic cell for a SAR BIT
		//- CHL_(OP|ON) goes 0 on CMP_(OP|ON) rising if EN, CHL_(OP|ON) go high on RST_N
		//- ENO goes 1 on CMP_(OP|ON) falling if EN
        { "name": "SARMRYX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "rows" : 5,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","RST_N","XA1:RST_N-|XA4:RST_N,XA5:RST_N"],
                                      ["M1","ENO","XA2:MN:G-|--XA1:MN3:D","offsetlow"],
                                      ["M1","LCK_N","XA5:MN1:G-|--XA2:MN:D"],
                                      ["M1","LCK_N","XA4:MN1:G-|--XA2:MN:D"],
                                      ["M1","CMP_OP","XA1:MN1:G|-XA5:MN0:G"],
                                      ["M2","CMP_ON","XA1:MN2:G-|XA4:MN0:G"],
                                      ["M2","EN","XA1:EN|-XA5:EN,XA4:EN"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["CMP_OP", "M1","XA4:MN0:G"], ["RST_N", "M1","XA5:RST_N"] , ["EN", "M1","XA1:MN0:G"], ["CMP_ON", "M1","XA5:MN0:G"], ["CHL_OP", "M1"], ["CHL_ON", "M1"] , ["ENO", "M1","XA1:MP1:S"] ]

          }
        },

		//- Memory cell to be able to drive SAR CAPS
        { "name": "SARDIGX1_EV",
          "class" : "Layout::LayoutDigitalCell",
          "rows" : 6,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M1","CP0","XA3:MN0:G-|--XA2:MN0:D"],
                                      ["M1","CN1","XA5:MN0:G-|--XA4:MN0:D"],
                                      ["M1","CHL_OP","XA2:MP0:G--|-XA1:XA5:MP2:D"],
                                      ["M2","CHL_ON","XA4:MN0:G-|--XA1:XA4:MN2:D"]
                                    ]
          },
          "afterRoute" : {
              "addPortOnRects" : [ ["CMP_OP", "M1"], ["RST_N", "M1"] , ["EN", "M1"], ["CMP_ON", "M1"], ["ENO", "M1","XA1:XA1:MP1:S"] ],
              "addPortVias" : [
                  ["M1","M4","CN1","XA3:MN0:G",1,2,-1,-0.5],
                  ["M1","M4","CP1","XA3:MN0:D",2,1,2,-0.5],
                  ["M1","M4","CP0","XA4:MN0:D",2,1,5,-0.5],
                  ["M1","M4","CN0","XA5:MN0:D",2,1,8,-0.5]
              ]
          }
        },

		//- Extention of SARDIG, it also gives an clock enable out (CEO) on C(N|P)(1|0)
		//- that can be used in the comparator delay loop. CEIN and CEO should be daisy chained (NOR chain)
        { "name": "SARDIGEX2_EV",
          "inherit" : "SARDIGX1_EV",
          "composite" : 1,
          "beforeRoute" : {
              "addDirectedRoutes" : [ ["M2","ENO","XA7:MP0:G-|--XA1$:ENO"],
                                      ["M1","ENO_N","XA8:MN0:G-|--XA7:MN0:D"],
                                      ["M1","ENO_N","XA8:MN0:G||XA9:MN0:G"],
                                      ["M2","CE","XA9:MN1:G-|--XA6:MN3:D"],
                                      ["M1","CE1","XA10:MN0:G-|--XA9:MN1:D","offsetlow"],
                                      ["M1","CE1_N","XA11:MN0:G-|--XA10:MN0:D","offsetlow"],
                                      ["M1","CEO1","XA12:MN0:G-|--XA11:MN1:S"],
                                      ["M1","CN0","XA5:MP0:D-|--XA6:MP0:G"],
                                      ["M2","CP1","XA3:MP0:D-|--XA6:MP2:G"]
                                    ],
			  "addConnectivityRoutes" : [
				  ["M4","VREF","||"]
			  ]

          },
          "afterRoute" : [
			  {"addPortVias" : [
                  ["M2","M3","ENO","XA1$:ENO",1,2,-1,-0.5],
				  ["M2","M3","EN","EN",1,2,-1,-0.5],
				  ["M2","M3","CMP_OP","CMP_OP",1,2,-1,-0.5]
			  ]},
               {"addPortOnRects" : [ ["CEIN", "M1","XA11:MN1:G"], ["CEO", "M1","XA12:MP0:D"] , ["CKS", "M1"],["DONE", "M1"], ["VREF", "M4" ,"XA2:VREF"]]}
          ]
        },

		//- Extension of SARDIGEX2 with SW2X replaced with SW4X
        { "name": "SARDIGEX4_EV",
          "inherit" : "SARDIGEX2_EV",
          "spiceRegex" : [
              ["SWX2_EV","SWX4_EV"]
          ]
        },

		
		{"name": "SAR9B_EV_NOROUTE",
		 "class" : "Layout::LayoutSARCDAC"
		},
		 
		//- 9-bit SAR
        {"name": "SAR9B_EV",
         "class" : "Layout::LayoutSARCDAC",
		 "inherit" : "SAR9B_EV_NOROUTE",
         "afterPlace" : [

             {"addPowerRings" :[
                 ["M1","AVSS"],
                 ["M1","AVDD"],
                 ["M1","VREF","t"]
             ]},
             { "addRouteRings" :[
                 ["M1","CK_SAMPLE_BSSW","rb"],
                 ["M1","CEIN","lb"]
             ]}
         ],
         "beforeRoute" : {
             "addRouteConnections" : [
                 ["CK_SAMPLE_BSSW","XB","bottom","M2"],
                 ["CEIN","XA0$","left","M2"],
                 ["CEIN","XB","bottom","M4"]
             ],
             "addDirectedRoutes" : [
                 ["M3","CMP_OP","XA20$:CPO-|--XA8$:XA1:XA1:A","offsetlowend"],
                 ["M3","CMP_ON","XA20$:XA3a:MP0:D--|-XA8$:CMP_ON","offsethighend"],
                 ["M3","CK_SAMPLE","XA20$:XA11:MP0:G-|--XA8$:XA6:MN3:G"],
                 ["M3","CK_CMP","XA20$:XA12:MP0:G--|-XA8$:CEO"],
                 ["M2","DONE","XA20$:XA11:MP1:G--|-XA8$:DONE"],
                 ["M4","SARP","XB1:VO1--|-XDAC1:XC1$:CTOP","2cuts,antenna"],
                 ["M4","SARN","XB2:VO1-|--XDAC2:XC1$:CTOP","2cuts,antenna"],
                 ["M3","SARN","XB1:VO2-|--XB2:VO1","2cuts"],
                 ["M4","SARP","XB1:VO1-|--XB2:VO2","2cuts"],
                 ["M3","EN","XA0:XA1:XA5:EN-XA0:RST_N","offsethigh,noendcut"],
                 ["M2","AVSS","RAIL_LEFT_AVSS-|-XDAC1:X:AVSS","strap"],
                 ["M2","AVSS","XDAC2:X:AVSS-|-RAIL_RIGHT_AVSS","strap"]
             ],
             "addPowerConnections" : [
                 ["AVDD","XA","top"],
                 ["VREF","XA","top"],
                 ["AVDD","XB","bottom"],
                 ["AVSS","XA","top"],
                 ["AVSS","XB","bottom"]

             ],
             "addConnectivityRoutes" : [
                 ["M3","CEO[02468]","-|--","leftdownleftup","","SARDIG"],
                 ["M3","CK_SAMPLE$","-|--","offsetlow,offsetlowend,novert","","SARDIG"],
                 ["M2","CEO[13579]","-|--","leftdownleftup","","SARDIG"],
                 ["M3","ENO[02468]","-|--","leftdownleftup","","SARDIG"],
                 ["M3","ENO[13579]","-|--","leftupleftdown,onTopL","","SARDIG"],
                 ["M3","CMP_O(P|N)","-|--","offsethigh,offsethighend,novert","","SARDIG"],
                 ["M3","EN$","-","offsethigh,onTopT","","SARDIG"]
             ]
         },
         "afterRoute" : {
             "addPortOnRects" : [ ["DONE", "M1"],["AVDD","M4"],["AVSS","M4"],["SAR_IP","M4"],["SAR_IN","M4"]],
             "extendPortsToEdge" :[["D<","t"],["SAR_","b"]]
         }
        }
    ]
}
